CCS PCM C Compiler, Version 5.005d, 1               10-jul-13 12:11
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\p2\kareem\GitHub\playroom\toogle\toogle_con_timer3.lst

               ROM used:   145 words (2%)
                           Largest free fragment is 2048
               RAM used:   23 (6%) at main() level
                           24 (7%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16f887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #use delay (clock=8000000) 
.................... #BYTE puertoA=0x05 
....................  
....................  
.................... int timers[10] = {0,0,0,0,0,0,0,0,0,0}; 
*
0070:  BCF    03.6
0071:  CLRF   27
0072:  CLRF   28
0073:  CLRF   29
0074:  CLRF   2A
0075:  CLRF   2B
0076:  CLRF   2C
0077:  CLRF   2D
0078:  CLRF   2E
0079:  CLRF   2F
007A:  CLRF   30
.................... int n_timers = 10; 
.................... void proceso1(void); 
.................... void proceso2(void); 
....................  
....................  
.................... #int_timer0 
.................... void timer_isr(void) 
.................... { 
....................     
....................    set_timer0(178);//esto ocurre cada 10ms 
*
002F:  MOVLW  B2
0030:  MOVWF  01
....................    while(n_timers) 
0031:  MOVF   31,F
0032:  BTFSC  03.2
0033:  GOTO   042
....................    { 
....................       n_timers--; 
0034:  DECF   31,F
....................       if (timers[n_timers]!= 0) 
0035:  MOVLW  27
0036:  ADDWF  31,W
0037:  MOVWF  04
0038:  BCF    03.7
0039:  MOVF   00,F
003A:  BTFSC  03.2
003B:  GOTO   041
....................       { 
....................         timers[n_timers]--; 
003C:  MOVLW  27
003D:  ADDWF  31,W
003E:  MOVWF  04
003F:  BCF    03.7
0040:  DECF   00,F
....................       } 
0041:  GOTO   031
....................    } 
....................    n_timers = 10; 
0042:  MOVLW  0A
0043:  MOVWF  31
0044:  BCF    0B.2
0045:  BCF    0A.3
0046:  BCF    0A.4
0047:  GOTO   01B
.................... } 
....................  
.................... void main (void) 
*
005C:  MOVLW  0A
005D:  MOVWF  31
005E:  BSF    03.5
005F:  BSF    03.6
0060:  MOVF   09,W
0061:  ANDLW  C0
0062:  MOVWF  09
0063:  BCF    03.6
0064:  BCF    1F.4
0065:  BCF    1F.5
0066:  MOVLW  00
0067:  BSF    03.6
0068:  MOVWF  08
0069:  BCF    03.5
006A:  CLRF   07
006B:  CLRF   08
006C:  CLRF   09
006D:  BCF    03.7
006E:  MOVLW  1F
006F:  ANDWF  03,F
.................... { 
....................    puertoA=0; 
*
007B:  CLRF   05
....................    set_tris_a(0x00); 
007C:  MOVLW  00
007D:  BSF    03.5
007E:  MOVWF  05
....................    setup_timer_0(RTCC_INTERNAL | RTCC_DIV_256); 
007F:  MOVF   01,W
0080:  ANDLW  C0
0081:  IORLW  07
0082:  MOVWF  01
....................    enable_interrupts(INT_TIMER0); 
0083:  BCF    03.5
0084:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
0085:  MOVLW  C0
0086:  IORWF  0B,F
....................     
....................    set_timer0(178); 
0087:  MOVLW  B2
0088:  MOVWF  01
....................     
....................    timers[2] =10 ; 
0089:  MOVLW  0A
008A:  MOVWF  29
....................    timers[1] =20 ; 
008B:  MOVLW  14
008C:  MOVWF  28
....................  
....................     while(1) 
....................    { 
....................      proceso1(); 
008D:  GOTO   048
....................      proceso2(); 
008E:  GOTO   052
008F:  GOTO   08D
....................    }  
.................... } 
....................  
0090:  SLEEP
.................... void proceso1(void) 
.................... { 
....................    if ( timers[2] == 0) 
*
0048:  MOVF   29,F
0049:  BTFSS  03.2
004A:  GOTO   04F
....................       { 
....................          puertoA = puertoA ^ (1<<5); 
004B:  MOVLW  20
004C:  XORWF  05,F
....................           timers[2] =10 ; 
004D:  MOVLW  0A
004E:  MOVWF  29
....................       } 
004F:  BCF    0A.3
0050:  BCF    0A.4
0051:  GOTO   08E (RETURN)
.................... } 
....................  
....................  
.................... void proceso2(void) 
.................... { 
....................     if ( timers[1] == 0) 
0052:  MOVF   28,F
0053:  BTFSS  03.2
0054:  GOTO   059
....................       { 
....................          puertoA = puertoA ^ (1<<7); 
0055:  MOVLW  80
0056:  XORWF  05,F
....................           timers[1] =20 ; 
0057:  MOVLW  14
0058:  MOVWF  28
....................       } 
0059:  BCF    0A.3
005A:  BCF    0A.4
005B:  GOTO   08F (RETURN)
.................... } 

Configuration Fuses:
   Word  1: 2FE7   RC NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
