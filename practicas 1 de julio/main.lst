CCS PCM C Compiler, Version 5.005d, 1               01-jul-13 11:52
Compiler operating in Evaluation Mode
To obtain a fully enabled compiler visit www.ccsinfo.com/products

               Filename:   C:\Users\p2\Desktop\kareem\practicas 1 de julio\main.lst

               ROM used:   189 words (2%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           16 (4%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   089
0003:  NOP
.................... #include <16f887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #fuses INTRC_IO 
.................... #use delay (clock=8000000) 
*
0073:  MOVLW  22
0074:  MOVWF  04
0075:  BCF    03.7
0076:  MOVF   00,W
0077:  BTFSC  03.2
0078:  GOTO   086
0079:  MOVLW  02
007A:  MOVWF  78
007B:  CLRF   77
007C:  DECFSZ 77,F
007D:  GOTO   07C
007E:  DECFSZ 78,F
007F:  GOTO   07B
0080:  MOVLW  97
0081:  MOVWF  77
0082:  DECFSZ 77,F
0083:  GOTO   082
0084:  DECFSZ 00,F
0085:  GOTO   079
0086:  BCF    0A.3
0087:  BCF    0A.4
0088:  GOTO   0BB (RETURN)
....................  
.................... int8 lee_microsw(void); 
....................  
.................... void main(void) 
0089:  MOVLW  71
008A:  BSF    03.5
008B:  MOVWF  0F
008C:  MOVF   0F,W
008D:  MOVLW  FF
008E:  BCF    03.5
008F:  MOVWF  20
0090:  BSF    03.5
0091:  BSF    03.6
0092:  MOVF   09,W
0093:  ANDLW  C0
0094:  MOVWF  09
0095:  BCF    03.6
0096:  BCF    1F.4
0097:  BCF    1F.5
0098:  MOVLW  00
0099:  BSF    03.6
009A:  MOVWF  08
009B:  BCF    03.5
009C:  CLRF   07
009D:  CLRF   08
009E:  CLRF   09
009F:  BCF    03.7
00A0:  MOVLW  1F
00A1:  ANDWF  03,F
....................    { 
....................        int8 leds; 
....................        set_tris_c(0xff); 
00A2:  MOVLW  FF
00A3:  BSF    03.5
00A4:  BCF    03.6
00A5:  MOVWF  07
00A6:  BCF    03.5
00A7:  MOVWF  20
....................        set_tris_e(0xff); 
00A8:  BSF    03.5
00A9:  BSF    09.0
00AA:  BSF    09.1
00AB:  BSF    09.2
00AC:  BSF    09.3
....................        set_tris_a(0); 
00AD:  MOVLW  00
00AE:  MOVWF  05
....................         
....................        
....................        while(1) 
....................         
....................        { 
....................            leds = lee_microsw(); 
00AF:  BCF    03.5
00B0:  GOTO   004
00B1:  MOVF   78,W
00B2:  MOVWF  21
....................            output_a(leds); 
00B3:  BSF    03.5
00B4:  CLRF   05
00B5:  BCF    03.5
00B6:  MOVF   21,W
00B7:  MOVWF  05
....................            delay_ms(200); 
00B8:  MOVLW  C8
00B9:  MOVWF  22
00BA:  GOTO   073
00BB:  GOTO   0B0
....................        } 
....................    } 
....................       
00BC:  SLEEP
....................    int8 lee_microsw(void) 
....................    { 
....................       int8 entrada0, entrada1, entrada2, entrada3, entrada4, entrada5, entrada6, entrada7; 
....................       int8 valor; 
....................        
....................       entrada0 = input(PIN_C0); 
*
0004:  BSF    20.0
0005:  MOVF   20,W
0006:  BSF    03.5
0007:  MOVWF  07
0008:  BCF    03.5
0009:  CLRF   22
000A:  BTFSC  07.0
000B:  INCF   22,F
....................       entrada1 = input(PIN_C1); 
000C:  BSF    20.1
000D:  MOVF   20,W
000E:  BSF    03.5
000F:  MOVWF  07
0010:  BCF    03.5
0011:  CLRF   23
0012:  BTFSC  07.1
0013:  INCF   23,F
....................       entrada2 = input(PIN_C2); 
0014:  BSF    20.2
0015:  MOVF   20,W
0016:  BSF    03.5
0017:  MOVWF  07
0018:  BCF    03.5
0019:  CLRF   24
001A:  BTFSC  07.2
001B:  INCF   24,F
....................       entrada3 = input(PIN_C3); 
001C:  BSF    20.3
001D:  MOVF   20,W
001E:  BSF    03.5
001F:  MOVWF  07
0020:  BCF    03.5
0021:  CLRF   25
0022:  BTFSC  07.3
0023:  INCF   25,F
....................       entrada4 = input(PIN_C4); 
0024:  BSF    20.4
0025:  MOVF   20,W
0026:  BSF    03.5
0027:  MOVWF  07
0028:  BCF    03.5
0029:  CLRF   26
002A:  BTFSC  07.4
002B:  INCF   26,F
....................       entrada5 = input(PIN_C5); 
002C:  BSF    20.5
002D:  MOVF   20,W
002E:  BSF    03.5
002F:  MOVWF  07
0030:  BCF    03.5
0031:  CLRF   27
0032:  BTFSC  07.5
0033:  INCF   27,F
....................       entrada6 = input(PIN_E1); 
0034:  BSF    03.5
0035:  BSF    09.1
0036:  BCF    03.5
0037:  CLRF   28
0038:  BTFSC  09.1
0039:  INCF   28,F
....................       entrada7 = input(PIN_E2); 
003A:  BSF    03.5
003B:  BSF    09.2
003C:  BCF    03.5
003D:  CLRF   29
003E:  BTFSC  09.2
003F:  INCF   29,F
....................        
....................        
....................       valor = entrada0 * 1; 
0040:  MOVF   22,W
0041:  MOVWF  2A
....................       valor +=(entrada1 *2); 
0042:  BCF    03.0
0043:  RLF    23,W
0044:  ADDWF  2A,F
....................       valor +=(entrada2 *4); 
0045:  RLF    24,W
0046:  MOVWF  77
0047:  RLF    77,F
0048:  MOVLW  FC
0049:  ANDWF  77,F
004A:  MOVF   77,W
004B:  ADDWF  2A,F
....................       valor +=(entrada3 *8); 
004C:  RLF    25,W
004D:  MOVWF  77
004E:  RLF    77,F
004F:  RLF    77,F
0050:  MOVLW  F8
0051:  ANDWF  77,F
0052:  MOVF   77,W
0053:  ADDWF  2A,F
....................       valor +=(entrada4 *16); 
0054:  SWAPF  26,W
0055:  MOVWF  77
0056:  MOVLW  F0
0057:  ANDWF  77,F
0058:  MOVF   77,W
0059:  ADDWF  2A,F
....................       valor +=(entrada5 *32); 
005A:  SWAPF  27,W
005B:  MOVWF  77
005C:  RLF    77,F
005D:  MOVLW  E0
005E:  ANDWF  77,F
005F:  MOVF   77,W
0060:  ADDWF  2A,F
....................       valor +=(entrada6 *64); 
0061:  SWAPF  28,W
0062:  MOVWF  77
0063:  RLF    77,F
0064:  RLF    77,F
0065:  MOVLW  C0
0066:  ANDWF  77,F
0067:  MOVF   77,W
0068:  ADDWF  2A,F
....................       valor +=(entrada7 *128); 
0069:  CLRF   77
006A:  BTFSC  29.0
006B:  BSF    77.7
006C:  MOVF   77,W
006D:  ADDWF  2A,F
....................      
....................       return valor; 
006E:  MOVF   2A,W
006F:  MOVWF  78
0070:  BCF    0A.3
0071:  BCF    0A.4
0072:  GOTO   0B1 (RETURN)
....................      
....................    } 

Configuration Fuses:
   Word  1: 2FE4   INTRC_IO NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
